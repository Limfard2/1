from flask import Flask, request, render_template  # Подключить Фласк
from datetime import datetime
import json

# json.load - загрузить данные из файла
# json.dump - сохарнить данные в файл

app = Flask(__name__)

MESSAGES_FILENAME = "messages_file.json"  # Имя файла с сообщенями


# Загружает сообщения из файла
def load_messages():
    with open(MESSAGES_FILENAME, "r") as message_file:
        return json.load(message_file)["messages"]


all_messages = load_messages()  # Список всех сообщений


# Сохранять все сообщения в файл
def save_messages():
    # 1. Открыть файл
    message_file = open(MESSAGES_FILENAME, "w")
    # 2. Приготовить структуру данных
    data = {
        "messages": all_messages
    }
    # 3. Структуру данных записать в файл
    json.dump(data, message_file)


# Функция добавления нового сообщения
# Пример: add_message("Вася", "Оставьте мне пивка плз")
def add_message(sender, text):
    # <= начинается с отступа код внутри функции этой
    # Создавать новое сообщение (новую структуру - словарь)
    new_message = {
        "text": text,
        "sender": sender,
        "time": datetime.now().strftime("%H:%M")  # "часы:минуты"
    }
    if 3 > int("sender") < 100:
        print(0)
    elif 3 < int("sender") > 100:
        print_all()

    if 3000 > int("text") < 1:
        print(0)
    elif 3000 < int("text") > 1:
        print_all()

    # Добавлять сообщение в список
    all_messages.append(new_message)
    save_messages()


# Функция вывода всех сообщений

def print_all():
    for msg in all_messages:
        print(f'[{msg["sender"]}]: {msg["text"]} / {msg["time"]}')


# Пример вызова функции без параметров
print_all()


@app.route("/")
def main_page():
    return "Hello, welcome to SkillChatServer5000"


@app.route("/get_messages")
def get_messages():
    return {"messages": all_messages}


@app.route("/send_message")
def send_message():
    text = request.args["text"]
    name = request.args["name"]
    add_message(name, text)
    return "ok"


@app.route("/chat")
def chat():
    return render_template("form.html")  # Отображаем визуальный интерфейс из файла form.html


# Добавление сообщения
# UI: поля для ввода имени и текста и кнопки "отправить"

app.run()
